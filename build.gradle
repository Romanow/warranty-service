plugins {
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.6.10"
    id "org.jetbrains.kotlin.plugin.spring" version "1.6.10"
    id "org.springframework.boot" version "2.6.4"
    id "com.gorylenko.gradle-git-properties" version "2.4.0"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
}

ext {
    springBootVersion = "2.6.4"
    commonServiceVersion = "1.0.0"
    postgresContainerVersion = "1.16.0"
}

sourceCompatibility = 1.11
targetCompatibility = 1.11

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

[compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "11"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/Romanow/common-service")
        credentials {
            username = System.getenv("GITHUB_USER")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

dependencies {
    implementation "ru.romanow.inst.services:common-service:$commonServiceVersion"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testcontainers:postgresql:$postgresContainerVersion"
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "${project.name}.jar"
}